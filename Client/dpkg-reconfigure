#!/usr/bin/perl -w
#
# Reconfigure a package, by running its confmodule and then its postinst.
# This has the same effect as re-installing the package, basically. I hope
# one day this will be called by dpkg --reconfigure 
#
# Pass package name(s) to reconfigure on command line.

use strict;
use lib '.';
use Debian::DebConf::ConfigDb;
use Debian::DebConf::Config;
use Debian::DebConf::AutoSelect;
use Getopt::Long;
use Fcntl;
use POSIX qw(tmpnam);

# See if they are root.
if ($> != 0) {
	print STDERR "$0 must be run as root.\n";
	exit 1;
}

my $infodir="/var/lib/dpkg/info";

Getopt::Long::config qw(bundling no_ignore_case permute);
my $ret=GetOptions(
	"frontend|f=s" => sub { shift; Debian::DebConf::Config::frontend(shift) },
	"priority|p=s" => sub { shift; Debian::DebConf::Config::priority(shift) },
);

# Load up previous state information.
if (-e Debian::DebConf::Config::dbfn()) {
	Debian::DebConf::ConfigDb::loaddb(Debian::DebConf::Config::dbfn());
}

my $frontend=Debian::DebConf::AutoSelect::frontend();

# Make the frontend show questions even if the user has already seen them.
# Since this is a reconfigure program, they may want to change their choices.
Debian::DebConf::Config::showold('true');

TOP:
foreach my $pkg (@ARGV) {
	# Set default title.
	$frontend->default_title($pkg);
	# Load up templates just in case they arn't already.
	Debian::DebConf::ConfigDb::loadtemplatefile("$infodir/$pkg.templates", $pkg)
		if -e "$infodir/$pkg.templates";

	if (-x "/var/lib/dpkg/info/$pkg.config") {
		# Start up the confmodule.
		my $confmodule=Debian::DebConf::AutoSelect::confmodule(
			"$infodir/$pkg.config");
		
		# Make sure any questions the confmodule registers are owned 
		# by this package.
		$confmodule->owner($pkg);
		
		# Talk to it until it is done.
		1 while ($confmodule->communicate);
		
		exit $confmodule->exitcode if $confmodule->exitcode > 0;
	}

	if (-x "/var/lib/dpkg/info/$pkg.postinst") {
		# Run the postinst as a confmodule. First, get the version
		# of this package that is installed to pass to it.
		(my $ver=`dpkg -s $pkg`)=~/Version: (.*)/m;
		my $confmodule=Debian::DebConf::AutoSelect::confmodule(
			"$infodir/$pkg.postinst configure $1");

		# Make sure any questions the confmodule registers are owned
		# by this package.
		$confmodule->owner($pkg);

		# Talk to it until it is done.
	        1 while ($confmodule->communicate);
		
		exit $confmodule->exitcode if $confmodule->exitcode > 0;
	}
}

# Save state.
Debian::DebConf::ConfigDb::savedb(Debian::DebConf::Config::dbfn());
