#!/usr/bin/perl -w
# This is a helper program for confmodule. It expects to be passed
# the name of the confmodule script to run, and any parameters for it.
# This whole thing is really a hack; in an ideal world, dpkg would handle
# all this.

use strict;
use lib ".";
use Debian::DebConf::ConfigDb;
use Debian::DebConf::Config;
use Debian::DebConf::AutoSelect;

# Load up previous state information.
if (-e Debian::DebConf::Config::dbfn()) {
	Debian::DebConf::ConfigDb::loaddb(Debian::DebConf::Config::dbfn());
}

my $frontend=Debian::DebConf::AutoSelect::frontend();

# Set the default title.
my $package=$ARGV[0];
$package=~s/\.(?:postinst|postrm|prerm)$//;
$package=~s:.*/::;
$frontend->default_title($package);

# See if the postinst of the package is being run, and if there is a
# config script associated with this package. If so, run it first as a
# confmodule (also loading the templates). This is a bit of a nasty hack, that
# lets you dpkg -i somepackage.deb and have its config script be run first.
if ($ARGV[0] =~/\.postinst$/) {
	# Load templates, if any.
	my $templates=$ARGV[0];
	$templates=~s/\.(?:postinst|prerm|postrm)$/.templates/;
	Debian::DebConf::ConfigDb::loadtemplatefile($templates, $package)
		if -e $templates;

	# Run config script, if any.
	my $config=$ARGV[0];
	$config=~s/\.(?:postinst|prerm|postrm)$/.config/;
	if (-e $config) {
		# If it is set, I assume that the third argument passed to this
		# program (which should be the second argument passed to the
		# postinst that ran it), is the package version.
		my $version=$ARGV[2];
		if ($version eq '') {
			$_=`dpkg --status $package`;
			($version)=m/Version: (.*)\n/;
		}
		
		my $confmodule=Debian::DebConf::AutoSelect::confmodule($config,
			"configure", $version);

		# Make sure any questions the confmodule generates
		# are owned by this package.
		$confmodule->owner($package);

		# Talk to it until it is done.
		1 while ($confmodule->communicate);
		
		exit $confmodule->exitcode if $confmodule->exitcode > 0;
	}
}

# Start up the confmodule we were asked to run.
my $confmodule=Debian::DebConf::AutoSelect::confmodule(join " ",@ARGV);

# Make sure any questions the confmodule generates are owned by this package.
$confmodule->owner($package);

# Talk to it until it is done.
1 while ($confmodule->communicate);

# Save state.
Debian::DebConf::ConfigDb::savedb(Debian::DebConf::Config::dbfn());

exit $confmodule->exitcode;
