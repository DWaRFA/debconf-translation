#!/usr/bin/perl -w
# This is a helper program for confmodule.sh. It expects to be passed
# the name of the confmodule script to run, and any parameters for it.
# This whole thing is really as hack, in an ideal world, dpkg would hhandle
# all this.

use strict;
use lib ".";
use Debian::DebConf::ConfigDb;
use Debian::DebConf::Config;

# Load up previous state information.
if (-e Debian::DebConf::Config::dbfn()) {
	Debian::DebConf::ConfigDb::loaddb(Debian::DebConf::Config::dbfn());
}

my $type=Debian::DebConf::Config::frontend();

my $frontend=eval qq{
	use Debian::DebConf::FrontEnd::$type;
	use Debian::DebConf::ConfModule::$type;
	Debian::DebConf::FrontEnd::$type->new();
};
die $@ if $@;

# Set the default title.
my $title=$ARGV[0];
$title=~s/\.(?:postinst|prerm)$//;
$title=~s:.*/::;
$frontend->default_title($title);

my $confmodule;

# See if the postinst or prerm of the package is being run, and if there is a
# config script associated with this package. If so, run it first as a
# confmodule (alos loading the templates). This is a bit of a nasty hack, that
# lets you dpkg -i somepackage.deb and have its config script be run first.
if ($ARGV[0] =~/\.(?:postinst|prerm)$/) {
	# Load templates, if any.
	my $templates=$ARGV[0];
	$templates=~s/\.(?:postinst|prerm)$/.templates/;
	Debian::DebConf::ConfigDb::loadtemplatefile($templates)
		if -e $templates;

	# Instantiate all questions.
	Debian::DebConf::ConfigDb::makequestions();

	# Run config script, if any.
	my $config=$ARGV[0];
	$config=~s/\.(?:postinst|prerm)$/.config/;
	if (-e $config) {
		$confmodule=eval qq{
			Debian::DebConf::ConfModule::$type->new(\$frontend, \$config);
		};
		die $@ if $@;
		
		# Talk to it until it is done.
		1 while ($confmodule->communicate);
	}
}

# Start up the confmodule we were asked to run.
$confmodule=eval qq{
	Debian::DebConf::ConfModule::$type->new(\$frontend, join " ",\@ARGV);
};
die $@ if $@;

# Talk to it until it is done.
1 while ($confmodule->communicate);

# Save state.
Debian::DebConf::ConfigDb::savedb(Debian::DebConf::Config::dbfn());
