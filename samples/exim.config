#!/usr/bin/perl -w
# This is a sample config module. It approximates 
# the questions asked by eximconfig.
use lib 'client';
use ConfModule qw(version capb title text input go previous_module get note);

# Establish the preliminaries.
my $version=version;
my $capb=capb('backup');
title('Exim Configuration');
text('medium', join ' ',
	   "I can do some automatic configuration of your mail system, by",
	   "asking you a number of questions.  Later you may have to confirm",
	   "and/or correct your answers. In any case, comprehensive",
	   "information on configuring exim is in the eximdoc package and in",
	   "/usr/doc/exim/spec.txt",
);

sub get_type () {
	input('medium', 'exim/system_type');
	my $ret=go;

	# Going back at this point is up to the frontend,
	# since it involves jumping out of this configmodule.
	if ( $ret eq "back") {
		# This is just a placeholder for something not in the spec.
		previous_module;
		exit;
	}

	my $systype=get('exim/system_type');

	# Check to see if they want to skip configuration, if so
	# give them the warning and quit.
	if ($systype eq "no configuration") {
		note('high', join ' ',
			'You chose to not allow exim to configure itself, so',
			'your mail system is currently broken and should not',
			'be used. You should either manually edit the mail',
			'system configuration (perhaps using',
			'/usr/doc/exim/example.conf.gz as a bare bones',
			'example) or run /usr/sbin/eximconfig to configure',
			"it.",
		);	
		go;
		exit;
	}
}

# This launches the whole thing.
get_type();
