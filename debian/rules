#!/usr/bin/make -f

# Uncomment this to turn on verbose mode. 
#export DH_VERBOSE=1

# This is the debhelper compatibility version to use.
export DH_COMPAT=2

# This has to be exported to make some magic below work.
export DH_OPTIONS

# I've broken up building to make the build-dependancies more sane,
# since lots of stuff is needed for building arch dependant and independant
# packages.
build:
	@echo "This package does not have a unified build target."
	@echo "Use either build-arch or build-indep to build."

build-arch: build-arch-stamp
build-arch-stamp:
	dh_testdir
	$(MAKE) -C po
	$(MAKE) -C apt
	touch build-arch-stamp

build-indep:  build-indep-stamp
build-indep-stamp:
	dh_testdir
	perl Makefile.PL
	$(MAKE)
	$(MAKE) -C doc

clean:
	dh_testdir
	dh_testroot
	rm -f build-arch-stamp build-indep-stamp
	-$(MAKE) clean
	dh_clean debian/debconf.changelog
	# Just so non-debian folks will know where to find it.
	ln -sf ../debian/copyright doc/COPYRIGHT

export prefix=$(shell pwd)/debian/tmp
install: build-arch build-indep
	dh_testdir
	dh_testroot
	dh_clean -k

	$(MAKE) pure_install INSTALLDIRS=perl \
		INSTALLSCRIPT=$(prefix)/usr/bin \
		INSTALLMAN3DIR=$(prefix)/usr/share/man/man3 \
		INSTALLMAN1DIR=$(prefix)/usr/share/man/man1 \
		INSTALLPRIVLIB=$(prefix)/usr/lib/perl5 \
		INSTALLARCHLIB=$(prefix)/deleteme # MakeMaker blows
	rm -rf $(prefix)/deleteme
	# Don't want the modules to be executable.
	find debian/tmp -type f -name \*.pm | xargs chmod 644
	# Now strip all pod documentation from all .pm files.
	# Also, don't use 'base'.
	find $(prefix)/usr/lib/perl5/Debconf/ $(prefix)/usr/bin		\
	     $(prefix)/usr/share/debconf/frontend			\
	     -name '*.pm' -or -name 'dpkg-*' |				\
	     grep -v Client/ConfModule | xargs perl -i.bak -ne '        \
	     	print $$_."# This file was preprocessed, do not edit directly.\n" \
			if m:^#!/usr/bin/perl:;				\
		$$cutting=1 if /^=/;                            	\
		$$cutting="" if /^=cut/;                        	\
		next if $$cutting || /^(=|\s*#)/ || $$_ eq "\n";	\
		if (/(use\s+base\s+q.?[{(])(.*?)([})])/) {		\
			$$what=$$2;					\
			$$use="";					\
			map { $$use.="use $$_;" } split(/\s+/, $$what);	\
			print "use vars qw{\@ISA}; $$use push \@ISA, qw{$$what};\n" \
		}							\
		else {							\
			print $$_					\
		}							\
	'
	find $(prefix) -name '*.bak' | xargs rm -f
		
	dh_movefiles

# Build architecture-independent files here.
# Pass -i to all debhelper commands in this target to reduce clutter.
binary-indep: DH_OPTIONS=-i
binary-indep: build-indep
	dh_testversion 2
	dh_testdir
	dh_testroot
	dh_clean -k
	dh_installdirs
	dh_installdocs doc/namespace.txt \
		doc/*.txt doc/*.html doc/TODO doc/CREDITS \
		doc/spec/*.txt doc/spec/*.html doc/spec/*.gif \
		doc/passthrough.txt doc/README
	dh_installexamples samples/*
	dh_installchangelogs
	dh_link
	dh_compress
	dh_fixperms
	dh_installdeb
	dh_gencontrol
	dh_md5sums
	dh_builddeb

# Build architecture-dependent files here.
# Pass -a to all debhelper commands in this target to reduce clutter.
binary-arch: DH_OPTIONS=-a
binary-arch: build-arch
	# Make sure debhelper is going to install the config and templates.
	dh_testversion 2.0.98
	dh_testdir
	dh_testroot
	dh_clean -k
	dh_installdirs
	# Don't modify postrm, I purge differently than normal packages
	# using me. dh_installdebconf uses code from this package, so
	# hack PATH
	PATH=.:$(PATH) dh_installdebconf -n
	dh_installdocs
	# Changelog reduction hack for debconf. Only include top 5 entries.
	perl -ne '$$c++ if /^debconf /; last if $$c > 5 ; print $$_' \
		< debian/changelog > debian/debconf.changelog
	echo "See /usr/share/doc/debconf-doc/changelog.gz for the" >> debian/debconf.changelog
	echo "remainder of this changelog." >> debian/debconf.changelog
	dh_installchangelogs
	dh_strip
	dh_link
	dh_compress
	dh_fixperms
	dh_installdeb
	dh_perl
	dh_shlibdeps
	dh_gencontrol
	dh_md5sums
	dh_builddeb

binary: binary-indep binary-arch
.PHONY: build clean build-indep binary-indep build-arch binary-arch binary
