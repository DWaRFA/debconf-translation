#!/usr/bin/perl -w

=head1 NAME

debconf-communicate - communicate with debconf

=cut

use strict;
use Debconf::Config qw(dbdir);
use Debconf::ConfigDb qw(loaddb savedb);
use Debconf::AutoSelect qw(:all);

=head1 SYNOPSIS

 debconf-communicate "command" "command args"

=head1 DESCRIPTION

B<debconf-communicate> allows you to communicate with debconf on the fly,
from the command line. It accepts any number of arguments, each of which
contains a single debconf command to run along with any parameters. For
documentation on the available commands and their usage, see Appendix A
of the Debconf Tutorial.

The commands are executed in sequence. The textual return code of each is
printed out to standard output.

The return value of this program is the numeric return code of the last
executed command.

=head1 EXAMPLES

 debconf-communicate "get debconf/frontend"

Print out the value of the debconf/frontend question.

 debconf-communicate "fset debconf/frontend seen false" \
                     "input medium debconf/frontend" go

This asks debconf to display the debconf/frontend question, even if it has
been seen before.

=head1 WARNING

This program should never be used from a maintainer script of a package
that uses debconf! It may however, be useful in debugging.

=head1 SEE ALSO

L<debconf-loadtemplate(8)|debconf-loadtemplate>

=cut

loaddb(dbdir());
my $frontend=make_frontend();
my $confmodule=make_confmodule();
my $code=127;
my $text;
foreach (@ARGV) {
	($code, $text)=split(/ /, $confmodule->process_command($_), 2);
	print $text if defined $text;
	print "\n";
}
$frontend->shutdown;
savedb(dbdir());
exit $code;

=head1 AUTHOR

Joey Hess <joey@kitenet.net>

=cut

