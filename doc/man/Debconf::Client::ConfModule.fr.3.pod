=head1 NOM

Debconf::Client::ConfModule - module client pour ConfModules

=head1 SYNOPSIS

 use Debconf::Client::ConfModule ':all';
 version('2.0');
 my $capb=capb('backup');
 input("medium", "foo/bar");
 my @ret=go();
 if ($ret[0] == 30) {
 	# Back button pressed.
 	...
 }
 ...

=head1 DESCRIPTION

C'est un module pour faciliter l'écriture de ConfModules pour le gestionnaire de
configuration système Debian. Il peut communiquer avec une interface via le
protocole debconf (qui est entièrement documenté dans le fichier 
«E<nbsp>debconf_specificationE<nbsp>» du paquet «E<nbsp>debian-policyE<nbsp>»).

L'idée est que chaque commande du protocole soit représentée par une
fonction dans ce module (le nom étant en minuscule). Appelez la fonction et
passez-lui les paramètres pour la commande. Si la fonction est appelée dans un
contexte scalaire, elle retournera un code textuel. Si elle est appelée dans un
contexte de liste, un tableau composé des codes de retour numérique et textuel
sera retourné.

Ce module utilise Exporter pour exporter toutes les fonctions qu'il définit.
Pour tout importer, simplement import «E<nbsp>:allE<nbsp>».

=over 4

=item import

S'assure qu'une interface est lancée. C'est un peu une méthode de hackers. Si
DEBIAN_HAS_FRONTEND est positionnée, une interface est supposée être lancée.
Si non, une interface est automatiquement lancée et les entrées et sorties
standard sont connectées à celle-ci. Remarquez que cette fonction est toujours
lancée quand le module est chargé de manière habituelle.

=item stop

L'interface n'envoie pas ici de code de retour, nous n'essayons pas de le
lire, nous serions bloqués.

=item CHARGEMENT AUTOMATIQUE

Crée un gestionnaire de fonction pour des commandes à la volée.

=back

=head1 VOIR AUSSI

Le fichier de spécification de debconf
(/usr/share/doc/debian-policy/debconf_specification.html.gz),
et le guide (/usr/share/doc/debconf-doc/tutorial.html).

=head1 AUTEUR

Joey Hess <joeyh@debian.org>

=head1 TRADUCTION

Julien Louis <leonptitlouis@ifrance.com>
